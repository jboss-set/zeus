---
- ansible.builtin.assert:
    that:
      - nginx_config_dir is defined
      - nginx_config_dir != ""
    quiet: true

- ansible.builtin.stat:
    path: "{{ nginx_config_dir }}"
  register: nginx_config_dir_path

- ansible.builtin.file:
    path: "{{ nginx_config_dir }}"
    state: directory
    owner: "{{ nginx.username }}" 
    group: "{{ nginx.groupname }}"
    mode: 0775
  when: nginx_config_dir_path.stat.exists

- ansible.builtin.file:
    state: link
    src: "{{ nginx_config_dir }}"
    dest: /etc/nginx
    owner: "{{ nginx.username }}"
    group: "{{ nginx.groupname }}"

- block:
    - name: "Ensure required subfolders exist"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ nginx.username }}" 
        group: "{{ nginx.groupname }}"
        mode: 0775
      loop:
        - "{{ nginx_config_dir }}/commons.d"

    - block:
      - ansible.builtin.set_fact:
          monit_username_password_string: "{{ monit_webapp_username }}:{{ monit_webapp_password }}"
      - ansible.builtin.set_fact:
          encoded_monit_username_password: "{{ monit_webapp_password | b64encode }}"
      when: 
        - monit_webapp_username is defined
        - monit_webapp_password is defined

    - name: "Deploy nginx configuration"
      ansible.builtin.template:
        src: "{{ files.src }}"
        dest: "{{ files.dest }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: templates/nginx.conf.j2, dest: "{{ nginx_config_dir }}/nginx.conf" }
        - { src: templates/commons.d/sites.conf.j2, dest: "{{ nginx_config_dir }}/commons.d/sites.conf" }
        - { src: templates/commons.d/proxy.conf.j2, dest: "{{ nginx_config_dir }}/commons.d/proxy.conf" }
      loop_control:
        loop_var: files
      notify:
        - restart nginx
  when: nginx_config_dir_path is defined

#- name: "Ensures that resulting configuration is valid."
#  include_role:
#    name: podman
#    tasks_from: podman/run.yml
#  vars:
#    item:
#      image_name: docker.io/library/nginx
#      volume:
#        src: "{{ payload_status.home }}"
#        dest: /workspace
#      script: '/build.sh'
#      owner: "{{ payload_status.owner }}"
# 
#        - include_role: 
