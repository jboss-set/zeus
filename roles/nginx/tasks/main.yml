---
- ansible.builtin.include_tasks: user_setup.yml

- ansible.builtin.set_fact:
    nginx_config_dir: "{{ nginx.home }}/config"

- ansible.builtin.assert:
    that:
      - nginx_config_dir is defined
      - nginx_config_dir != ""
    quiet: true
    fail_msg: "Invalid parameters"

- ansible.builtin.stat:
    path: "{{ nginx_config_dir }}"
  register: nginx_config_dir_path

- ansible.builtin.assert:
    that:
      - nginx_config_dir_path is defined

- ansible.builtin.file:
    state: directory
    path: "{{ nginx_config_dir }}"
    owner: "{{ nginx.username }}"
    group: "{{ nginx.groupname }}"
  when:
    - not nginx_config_dir_path.stat.exists

- ansible.builtin.include_tasks: nginx_config.yml

- ansible.builtin.include_tasks: static_content.yml

- ansible.builtin.include_tasks: http_cache_setup.yml
  when: nginx.caches is defined

- ansible.builtin.include_tasks: ssl.yml
  when: nginx.https is defined

- ansible.builtin.include_tasks: jenkins.yml
  when:
    - jenkins is defined
    - jenkins.service is defined

- name: permit traffic in default zone for https service
  ansible.posix.firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - http
    - https

- ansible.builtin.set_fact:
    podman_services: "{{ podman_services }} + {{ nginx.service }}"
