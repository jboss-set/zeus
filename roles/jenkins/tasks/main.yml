---
- ansible.builtin.assert:
    that:
      - jenkins is defined
      - jenkins.groupname is defined
      - jenkins.groupname != ""
      - jenkins.gid is defined
      - jenkins.username is defined
      - jenkins.username != ""
      - jenkins.uid is defined
      - jenkins.home is defined
      - jenkins.home != ""
      - jenkins.tools is defined
      - jenkins.tools.home is defined
      - jenkins.tools.home != ""
    quiet: true

- name: "Ensures data folder for Jenkins and Jenkins.next exists."
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ jenkins.username }}"
    group: "{{ jenkins.groupname | default(jenkins.username) }}"
  loop:
    - "{{ jenkins.home_next }}"
    - "{{ jenkins.home }}"

- name: "Ensures tools home directory ({{ jenkins.tools.home }} exists."
  ansible.builtin.file:
    state: directory
    path: "{{ jenkins.tools.home }}"
    owner: "{{ jenkins.username }}"
    group: "{{ jenkins.username }}"

- name: "Deploy missing configuration file for Jenkins into {{ ares.home }}."
  ansible.builtin.template:
    src: templates/casc.yaml.j2
    dest: "{{ ares.home }}/hephaestus/casc.yaml"
    owner: "{{ ares.owner }}"
    group: "{{ ares.owner }}"

- ansible.builtin.include_tasks: generate_keys.yml
  loop:
    - "/home/jenkins"
  loop_control:
    loop_var: homedir

- name: "Download root CA"
  ansible.builtin.get_url:
    url: "{{ jenkins.root_ca.url }}"
    dest: "{{ ares.home }}/hephaestus/Root-CA.crt"
  check_mode: no
  when:
    - jenkins.root_ca.url is defined

- name: "Import Root CA"
  community.general.java_cert:
    cert_path: "{{ ares.home }}/hephaestus/Root-CA.crt"
    keystore_path: "{{ ares.home }}/hephaestus/cacerts"
    cert_alias: "root-ca"
    executable: "{{ jenkins.default_jdk_home }}/bin/keytool"
    keystore_pass: changeit
    keystore_create: yes
    state: present
  when:
    - jenkins.root_ca.url is defined

- name: "Deploy fetchLastSuccessfulBuildId.sh"
  ansible.builtin.template:
    src: templates/fetchLastSuccessfulBuildId.sh.j2
    dest: "{{ item }}/fetchLastSuccessfulBuildId.sh"
    owner: jenkins
    group: jenkins
    mode: 0755
  loop:
    - "{{ jenkins.home }}"
    - "{{ jenkins.home_next }}"

- name: "Ensures data folder for Jenkins.next exists."
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ jenkins.username }}"
    group: "{{ jenkins.username }}"
  loop:
    - "{{ jenkins.home_next }}"
    - "{{ jenkins.home }}"

- ansible.builtin.set_fact:
     podman_services: "{{ podman_services }} + {{ jenkins.service }}"

- ansible.builtin.set_fact:
     jenkins_service: "{{ jenkins.service }}"
