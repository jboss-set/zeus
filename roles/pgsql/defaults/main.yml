---
sql_script_to_run: []
pgsql:
  scripts:
    home: /opt/tools/pgsql
  instances:
    mjolnir_preprod:
      db_name: mjolnir
      username: mjolnir
      password: "{{ mjolnir_preprod_psql_password }}"
      port: 5432
      create_db: 
        name: 'mjolnir-preprod_create.sql'
        url: 'https://raw.githubusercontent.com/jboss-set/mjolnir-archive-service/master/dbscripts/create.sql'
      load_data: 
        name: 'mjolnir-preprod_data.sql'
      data_volume: /var/lib/pgsql-mjolnir-predprod
    component_upgrade:
      db_name: component-upgrade
      username: component-upgrade
      password: "{{ component_upgrade_psql_password }}"
      port: 15432
      create_db: 
        name: 'component-upgrade-init.sql'
        url: 'https://raw.githubusercontent.com/TomasHofman/component-upgrade-logger/main/src/main/resources/init.sql'
      data_volume: /var/lib/pgsql-component-upgrade-dev
postgres_instances:
  services:
    - name: pgsql-mjolnir-predprod
      image: 'docker.io/library/postgres'
      ip: "{{ known_hosts.pgsql_mjolnir.ip | default('10.88.0.4') }}"
      db_name: "{{ pgsql.instances.mjolnir_preprod.db_name }}"
      ports_mapping:
        - { src: '5432', dest: "{{ pgsql.instances.mjolnir_preprod.port }}" }
      vars:
       - { name: 'POSTGRES_PASSWORD', value: "{{ pgsql.instances.mjolnir_preprod.password }}" }
       - { name: 'POSTGRES_USER', value: "{{ pgsql.instances.mjolnir_preprod.username }}" }
      readwrite_volumes:
       - { src: "{{ pgsql.instances.mjolnir_preprod.data_volume }}", dest: '/var/lib/postgresql/data' }

    - name: pgsql-component-upgrade-dev
      image: 'docker.io/library/postgres'
      ip: "{{ known_hosts.pgsql_mjolnir.ip | default('10.88.0.5') }}"
      db_name: "{{ pgsql.instances.component_upgrade }}"
      ports_mapping:
        - { src: '5432', dest: "{{ pgsql.instances.component_upgrade.port }}" }
      vars:
       - { name: 'POSTGRES_PASSWORD', value: "{{ pgsql.instances.component_upgrade.password }}" }
       - { name: 'POSTGRES_USER', value: "{{ pgsql.instances.component_upgrade.username }}" }
      readwrite_volumes:
        - { src: "{{ pgsql.instances.component_upgrade.data_volume }}", dest: '/var/lib/postgresql/data' }
